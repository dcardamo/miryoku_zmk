# Example for using the keymap-drawer ZMK user config workflow
name: Dan build
on:
  workflow_dispatch: # can be triggered manually
  push: # automatically run on changes to following paths
    paths:
      - "config/corne*.keymap"
      - "config/*.dtsi"
      - "miryoku/*.h"
      - "miryoku/*.dtsi"
jobs:
  build_corneish_zen:
    uses: ./.github/workflows/main.yml
    secrets: inherit
    with:
      board: '[
        "corneish_zen_v1_left","corneish_zen_v1_right",
        "corneish_zen_v2_left","corneish_zen_v2_right"
      ]'
      custom_config: '["#define MIRYOKU_KLUDGE_MOUSEKEYSPR"]'
      kconfig: '["CONFIG_ZMK_DISPLAY_HIDE_MOMENTARY_LAYERS=y\nCONFIG_CUSTOM_WIDGET_LAYER_STATUS_HIDE_HEADING=y\nCONFIG_CUSTOM_WIDGET_LOGO_IMAGE_MIRYOKU=y\nCONFIG_IL0323_INVERT=y\nCONFIG_ZMK_MOUSE=y"]'
      branches: '["zmkfirmware/zmk/main caksoylar/zmk/caksoylar/zen-v1+v2 urob/zmk/mouse-3.2"]'

  build_chocofi:
    uses: ./.github/workflows/main.yml
    secrets: inherit
    with:
      board: '["nice_nano_v2"]'
      shield: '["corne_left nice_view_adapter nice_view","corne_right nice_view_adapter nice_view"]'

  draw:
    permissions:
      contents: write
    uses: caksoylar/keymap-drawer/.github/workflows/draw-zmk.yml@main
    with:
      keymap_patterns: "config/corne*.keymap" # path to the keymaps to parse
      config_path: "keymap_drawer.config.yaml" # config file, ignored if not exists
      output_folder: "svg" # path to save produced SVGs
      parse_args: "" # map of extra args to pass to `keymap parse`, e.g. "corne:'-l Def Lwr Rse' cradio:''"
      draw_args: "" # map of extra args to pass to `keymap draw`, e.g. "corne:'-k corne_rotated' cradio:'-k paroxysm'"
